########################################################################################################################

# This is an example configuration file for the s1ard prototype processor. Please refer to the documentation for
# further details about individual parameters and usage in general:

# https://s1ard.readthedocs.io/en/latest/general/usage.html#usage

########################################################################################################################

[PROCESSING]

# OPTIONS: sar | nrb | orb
# sar: only SAR pre-processing
# nrb: NRB generation from existing pre-processed SAR products
# orb: ORB generation from existing pre-processed SAR products
mode = sar, nrb

# define a single SAR scene filename instead of searching for scenes in a database
# if this parameter is set, the 'mode' must be 'sar'
# in case of a GRD, database search is still performed to collect neighbors
scene =

# optional definition of a geometry via tile IDs or a vector file.
# [aoi_tiles] expects a comma-separated list of MGRS tile IDs.
# [aoi_geometry] expects a full path to a vector file (GeoJSON, GPKG, KML or Shapefile).
# This option identifies MGRS tile IDs that intersect with the given vector geometry.
# [aoi_tiles] overrides [aoi_geometry].
aoi_tiles = 32TMT, 32TNT
aoi_geometry =

# Allowed date formats: anything that can be parsed by
# https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.parse
# maxdate: format %Y-%m-%d will be interpreted as end of day, e.g. 2021-09-01 -> 2021-09-01 23:59:59.999999
mindate = 2021-06-01
maxdate = 2021-09-01

# treat dates as strict limits or also allow flexible limits to incorporate scenes
# whose acquisition period overlaps with the defined limit?
# - strict: start >= mindate & stop <= maxdate
# - not strict: stop >= mindate & start <= maxdate
date_strict = True

# OPTIONS: S1A | S1B
sensor = S1A

# OPTIONS: IW | EW | SM
acq_mode = IW

# OPTIONS: GRD | SLC
product = SLC

# hexadecimal data take ID(s), e.g. 04EBF7
# STAC scene search requires a custom key s1:datatake
datatake =

# [work_dir] Main project directory. Will be used to store any subdirectories and files that are generated during processing.
# Must be a full path to an existing directory.
work_dir = /example/project/directory

# Recommended to use the following default values, which automatically create subdirectories of [work_dir], e.g.:
# `/<work_dir>/SAR`, `/<work_dir>/TMP`, etc. Alternatively, full paths to existing directories can be provided.
sar_dir = SAR
tmp_dir = TMP
ard_dir = ARD
wbm_dir = WBM

# The path to a log file. If set to None, all logs will be printed to the console.
# The file path can be relative to [work_dir] or absolute.
logfile =
###########################################################
# scene search option I: search directory and store scene metadata in an SQLite database

# Directory containing source SLC or GRD scenes. The directory can include scenes not relevant for the
# processing run, as the processor will automatically search for relevant scenes using the parameters defined above.
# Must be a full path to an existing directory.
scene_dir = /example/scene/directory

# [db_file] An SQLite database file to index scenes found in [scene_dir]. Will be generated if it doesn't exist already.
# The file path can be relative to [work_dir] or absolute.
db_file = scenes.db
###########################################################
# scene search option II: SpatioTemporal Asset Catalog queries

# a STAC URL
stac_catalog =

# STAC collections to be searched
stac_collections =
###########################################################

# OPTIONS: Copernicus 10m EEA DEM | Copernicus 30m Global DEM II | Copernicus 30m Global DEM | GETASSE30
# The names are taken from the options of function https://pyrosar.readthedocs.io/en/latest/pyroSAR.html#pyroSAR.auxdata.dem_autoload.
# 'GETASSE30' does not include a water body mask.
# 'Copernicus 10m EEA DEM' and 'Copernicus 30m Global DEM II' require registration via:
# https://spacedata.copernicus.eu/web/cscda/data-access/registration
# Authentication credentials can be set via environment variables 'DEM_USER' and 'DEM_PASS' or interactively during processor runs.
dem_type = Copernicus 30m Global DEM

# Temporarily changes GDAL_NUM_THREADS during processing. Will be reset after processing has finished.
gdal_threads = 4

# Further arguments to be passed to the internal SNAP GPT call
# e.g. run GPT with 100GB of memory, 75GB cache and 30 threads:
# snap_gpt_args = -J-Xmx100G -c 75G -q 30
snap_gpt_args =

# The backscatter measurement convention. Either gamma nought or sigma nought.
# Other conventions will be included in the ARD product as VRTs using the annotation layers gs and sg.
# OPTIONS: gamma | sigma
measurement = gamma

# list of annotation layers to write to the ARD product. OPTIONS:
# dm: data mask (six masks: not layover not shadow, layover, shadow, ocean, lakes, rivers)
# ei: ellipsoidal incident angle (needed for computing geolocation accuracy)
# em: digital elevation model
# id: acquisition ID image (source scene ID per pixel)
# lc: RTC local contributing area
# ld: range look direction angle
# li: local incident angle
# np: noise power (NESZ, per polarization)
# ratio: will automatically be replaced with the following, depending on selected [measurement]:
#     gs: gamma-sigma ratio: sigma0 (RTC) / gamma0 (RTC)
#     sg: sigma-gamma ratio: gamma0 (RTC) / sigma0 (RTC)
# wm: OCN OWI wind model
# Use one of the following to create no annotation layer:
# annotation =
# annotation = None
annotation = dm, ei, em, id, lc, li, np, ratio

# Should ETAD correction be performed on SLCs? If [etad] is False, [etad_dir] will be ignored,
# otherwise [etad_dir] is searched recursively for ETAD products matching the defined SLCs.
etad = False
etad_dir = /example/etad/directory


[METADATA]

# The metadata file format(s) to be created for each ARD product. OPTIONS:
# - OGC (XML file according to OGC EO standard)
# - STAC (JSON)
format = OGC, STAC

# Copy the original metadata of the source scene(s) to the ARD product directory?
# Includes manifest.safe and annotation folder.
copy_original = True

# The metadata files created for each ARD product contain some fields that should not be hidden away and hardcoded
# with arbitrary values. Instead, they can be accessed here in order to more easily generate a complete set of metadata.
# These fields are mostly relevant if you want to produce ARD products systematically and make them available for
# others. If you don't see a need for them you can just leave the fields empty, use the default 'None' or delete this
# entire section.
access_url = None
licence = None
doi = None
processing_center = None
